#name: Dockersetup
- hosts: blueteam
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Preamble
      ansible.builtin.apt:
        name: 
        - ca-certificates
        - curl 
        - gnupg
        - python3-pip
        - python3-setuptools
        update_cache: true
    - name: Docker Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Docker Repo
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Update and install Docker
      apt:
        name: docker-ce
        state: latest
        update_cache: true
      notify:
        - Docker pip
        - Docker start
        - Docker network
        - Web container
        - DB container
        - API container
        - Proxy container
        - User Config
  handlers:
    # Install Docker python packages
    - name: Docker pip
      pip:
        name: docker
    # Start Docker
    - name: Docker start
      ansible.builtin.systemd:
        name: docker
        state: started
    # Create the docker network 
    - name: Docker network
      community.docker.docker_network:
        name: website_proxy_network
    # Create and start the web container (running on 
    - name: Web container
      community.docker.docker_container:
        image: daintyjet/webday-site-image 
        name: web-site
        pull: true
        state: started
        published_ports:
          - "8080:3000"
        networks:
          - name: website_proxy_network
    # Bernal made the container use a database 
    - name: DB container
      community.docker.docker_container:
        image: daintyjet/webday-sql-image 
        name: database
        pull: true
        networks:
          - name: website_proxy_network
        state: started
        #volumes:
    # Bernal made the container use a API server 
    - name: API container
      community.docker.docker_container:
        image: daintyjet/webday-api-image 
        name: api-server
        pull: true
        networks:
          - name: website_proxy_network
        state: started
    - name: Proxy container
      community.docker.docker_container:
        image: nginx
        name: proxy
        pull: true
        networks:
          - name: website_proxy_network
        state: started
        published_ports:
          - "80:80"
        volumes:
          - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    - name: User Config
      ansible.builtin.shell: | 
        usermod -aG docker manager